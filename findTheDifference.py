"""Find the Difference
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:

Input: s = "", t = "y"
Output: "y"
"""

import collections
import unittest

def findTheDifference(s: str, t: str) -> str:
        counter_s = collections.Counter(s)
        counter_t = collections.Counter(t)
        
        for letter in counter_t:
            if counter_s[letter] != counter_t[letter]:
                return letter

# N - number of letters in array 't'
# Time Complexity: O(N)
# Space Complexity: O(N)

def findTheDifference_Sorted(s: str, t: str) -> str:
    sorted_s = sorted(s)
    sorted_t = sorted(t)

    for letter in range(len(sorted_s)-1):
        if sorted_s[letter] != sorted_t[letter]:
            return letter
    return sorted_t[len(sorted_t)-1]

# N - number of letters in array 't'
# Time Complexity: O(NlogN)
# Space Complexity: O(NlogN)

class TestProblems(unittest.TestCase):
    def test_find_the_difference(self):
        actual = findTheDifference("abcd", "abcde")
        expected = "e"
        self.assertTrue(actual, expected)

        actual_1 = findTheDifference("", "y")
        expected_1 = "y"
        self.assertTrue(actual_1, expected_1)

        actual = findTheDifference_Sorted("abcd", "abcde")
        expected = "e"
        self.assertTrue(actual, expected)

        actual_1 = findTheDifference_Sorted("", "y")
        expected_1 = "y"
        self.assertTrue(actual_1, expected_1)




if __name__ == '__main__':
    unittest.main()